"""
21. MERGE TWO SORTED LISTS

You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.
"""

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        mergedList = ListNode()
        curr = mergedList
        
        while list1 and list2:
            # Compare and add smaller node before advancing to next node
            if list1.val <= list2.val:
                curr.next = list1
                list1 = list1.next
            else:
                curr.next = list2
                list2 = list2.next
            # Advance current to next nodes so that next loop iteration will add onto end
            curr = curr.next
            
        # If lists are different lengths, add remaining nodes to mergedList
        if list1 != None:
            curr.next = list1
        else:
            curr.next = list2
            
        return mergedList.next # list head starts at the second node of mergedList
