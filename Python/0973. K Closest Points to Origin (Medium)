"""
973. K CLOSEST POINTS TO ORIGIN

Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane and an integer k, 
return the k closest points to the origin (0, 0).

The distance between two points on the X-Y plane is the Euclidean distance (i.e., âˆš(x1 - x2)2 + (y1 - y2)2).

You may return the answer in any order. The answer is guaranteed to be unique (except for the order that it is in).
"""

class Solution:
    def kClosest(self, points: List[List[int]], k: int) -> List[List[int]]:
        CoordinateHeap = [] # List of k points closest to origin
        
        # For each coordinate, calulate the distance to the origin
        for x, y in points:
            distance = math.sqrt(x**2 + y**2) # euclidean distance to origin
            
            # Check if more points (up to k) need to be recorded
            if len(CoordinateHeap) < k: 
                heapq.heappush(CoordinateHeap, (-distance, [x, y]) ) # add point to max-heap
            # If heap is full, swap with the farthest distance element
            else:
                heapq.heappushpop(CoordinateHeap, (-distance, [x, y]))
                
        # CoordinateHeap contains (-distance, [x, y]) so return only the coordinates
        return [point[1] for point in CoordinateHeap] # return the k closest points
